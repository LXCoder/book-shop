#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace booksShop.App_Code
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Goods")]
	public partial class GoodsDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertAdmin(Admin instance);
    partial void UpdateAdmin(Admin instance);
    partial void DeleteAdmin(Admin instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertBook(Book instance);
    partial void UpdateBook(Book instance);
    partial void DeleteBook(Book instance);
    partial void InsertCartItem_(CartItem_ instance);
    partial void UpdateCartItem_(CartItem_ instance);
    partial void DeleteCartItem_(CartItem_ instance);
    partial void InsertCategory(Category instance);
    partial void UpdateCategory(Category instance);
    partial void DeleteCategory(Category instance);
    partial void InsertCollection(Collection instance);
    partial void UpdateCollection(Collection instance);
    partial void DeleteCollection(Collection instance);
    partial void InsertOrder(Order instance);
    partial void UpdateOrder(Order instance);
    partial void DeleteOrder(Order instance);
    partial void InsertOrderitem(Orderitem instance);
    partial void UpdateOrderitem(Orderitem instance);
    partial void DeleteOrderitem(Orderitem instance);
    #endregion
		
		public GoodsDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GoodsDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GoodsDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GoodsDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Admin> Admin
		{
			get
			{
				return this.GetTable<Admin>();
			}
		}
		
		public System.Data.Linq.Table<User> User
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<Book> Book
		{
			get
			{
				return this.GetTable<Book>();
			}
		}
		
		public System.Data.Linq.Table<CartItem_> CartItem_
		{
			get
			{
				return this.GetTable<CartItem_>();
			}
		}
		
		public System.Data.Linq.Table<Category> Category
		{
			get
			{
				return this.GetTable<Category>();
			}
		}
		
		public System.Data.Linq.Table<Collection> Collection
		{
			get
			{
				return this.GetTable<Collection>();
			}
		}
		
		public System.Data.Linq.Table<Order> Order
		{
			get
			{
				return this.GetTable<Order>();
			}
		}
		
		public System.Data.Linq.Table<Orderitem> Orderitem
		{
			get
			{
				return this.GetTable<Orderitem>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Admin")]
	public partial class Admin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _adminId;
		
		private string _adminname;
		
		private string _adminpwd;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnadminIdChanging(string value);
    partial void OnadminIdChanged();
    partial void OnadminnameChanging(string value);
    partial void OnadminnameChanged();
    partial void OnadminpwdChanging(string value);
    partial void OnadminpwdChanged();
    #endregion
		
		public Admin()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adminId", DbType="Char(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string adminId
		{
			get
			{
				return this._adminId;
			}
			set
			{
				if ((this._adminId != value))
				{
					this.OnadminIdChanging(value);
					this.SendPropertyChanging();
					this._adminId = value;
					this.SendPropertyChanged("adminId");
					this.OnadminIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adminname", DbType="VarChar(50)")]
		public string adminname
		{
			get
			{
				return this._adminname;
			}
			set
			{
				if ((this._adminname != value))
				{
					this.OnadminnameChanging(value);
					this.SendPropertyChanging();
					this._adminname = value;
					this.SendPropertyChanged("adminname");
					this.OnadminnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adminpwd", DbType="VarChar(50)")]
		public string adminpwd
		{
			get
			{
				return this._adminpwd;
			}
			set
			{
				if ((this._adminpwd != value))
				{
					this.OnadminpwdChanging(value);
					this.SendPropertyChanging();
					this._adminpwd = value;
					this.SendPropertyChanged("adminpwd");
					this.OnadminpwdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _uid;
		
		private string _loginname;
		
		private string _loginpass;
		
		private string _email;
		
		private System.Nullable<short> _status;
		
		private string _activationCode;
		
		private EntitySet<CartItem_> _CartItem_;
		
		private EntitySet<Collection> _Collection;
		
		private EntitySet<Order> _Order;

        // 注册表单
        private string _reloginpass;//确认密码
        private string _verifyCode;//验证码

        // 修改密码表单
        private String _newpass;//新密码
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnuidChanging(string value);
    partial void OnuidChanged();
    partial void OnloginnameChanging(string value);
    partial void OnloginnameChanged();
    partial void OnloginpassChanging(string value);
    partial void OnloginpassChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnstatusChanging(System.Nullable<short> value);
    partial void OnstatusChanged();
    partial void OnactivationCodeChanging(string value);
    partial void OnactivationCodeChanged();
    #endregion
		
		public User()
		{
			this._CartItem_ = new EntitySet<CartItem_>(new Action<CartItem_>(this.attach_CartItem_), new Action<CartItem_>(this.detach_CartItem_));
			this._Collection = new EntitySet<Collection>(new Action<Collection>(this.attach_Collection), new Action<Collection>(this.detach_Collection));
			this._Order = new EntitySet<Order>(new Action<Order>(this.attach_Order), new Action<Order>(this.detach_Order));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uid", DbType="Char(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string uid
		{
			get
			{
				return this._uid;
			}
			set
			{
				if ((this._uid != value))
				{
					this.OnuidChanging(value);
					this.SendPropertyChanging();
					this._uid = value;
					this.SendPropertyChanged("uid");
					this.OnuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_loginname", DbType="VarChar(50)")]
		public string loginname
		{
			get
			{
				return this._loginname;
			}
			set
			{
				if ((this._loginname != value))
				{
					this.OnloginnameChanging(value);
					this.SendPropertyChanging();
					this._loginname = value;
					this.SendPropertyChanged("loginname");
					this.OnloginnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_loginpass", DbType="VarChar(50)")]
		public string loginpass
		{
			get
			{
				return this._loginpass;
			}
			set
			{
				if ((this._loginpass != value))
				{
					this.OnloginpassChanging(value);
					this.SendPropertyChanging();
					this._loginpass = value;
					this.SendPropertyChanged("loginpass");
					this.OnloginpassChanged();
				}
			}
		}

        public string reloginpass
        {
            get { return this._reloginpass; }
            set
            {
                if (this._reloginpass != value)
                {
                    this._reloginpass = value;
                }
            }
        }

        public string verifyCode
        {
            get { return this._verifyCode; }
            set
            {
                if (this._verifyCode != value)
                {
                    this._verifyCode = value;
                }
            }
        }

        public string newpass
        {
            get { return this._newpass; }
            set
            {
                if (this._newpass != value)
                {
                    this._newpass = value;
                }
            }
        }
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(50)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="SmallInt")]
		public System.Nullable<short> status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_activationCode", DbType="Char(64)")]
		public string activationCode
		{
			get
			{
				return this._activationCode;
			}
			set
			{
				if ((this._activationCode != value))
				{
					this.OnactivationCodeChanging(value);
					this.SendPropertyChanging();
					this._activationCode = value;
					this.SendPropertyChanged("activationCode");
					this.OnactivationCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_CartItem_", Storage="_CartItem_", ThisKey="uid", OtherKey="uid_")]
		public EntitySet<CartItem_> CartItem_
		{
			get
			{
				return this._CartItem_;
			}
			set
			{
				this._CartItem_.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Collection", Storage="_Collection", ThisKey="uid", OtherKey="uid")]
		public EntitySet<Collection> Collection
		{
			get
			{
				return this._Collection;
			}
			set
			{
				this._Collection.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Order", Storage="_Order", ThisKey="uid", OtherKey="uid")]
		public EntitySet<Order> Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				this._Order.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CartItem_(CartItem_ entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_CartItem_(CartItem_ entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Collection(Collection entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Collection(Collection entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Order(Order entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Order(Order entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Book")]
	public partial class Book : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _bid;
		
		private string _bname;
		
		private string _author;
		
		private System.Nullable<decimal> _price;
		
		private System.Nullable<decimal> _currPrice;
		
		private System.Nullable<decimal> _discount;
		
		private string _press;
		
		private string _publishtime;
		
		private System.Nullable<int> _edition;
		
		private System.Nullable<int> _pageNum;
		
		private System.Nullable<int> _wordNum;
		
		private string _printtime;
		
		private System.Nullable<int> _booksize;
		
		private string _paper;
		
		private string _cid;
		
		private string _image_w;
		
		private string _image_b;
		
		private int _orderBy;

        private int _xingji;//收藏量

        private int _stock;//库存

        private int _deal;//交易量

        private int _statue;//用户的收藏列表是否有该本书，0不存在  1存在
		
		private EntitySet<CartItem_> _CartItem_;
		
		private EntitySet<Collection> _Collection;
		
		private EntityRef<Category> _Category;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnbidChanging(string value);
    partial void OnbidChanged();
    partial void OnbnameChanging(string value);
    partial void OnbnameChanged();
    partial void OnauthorChanging(string value);
    partial void OnauthorChanged();
    partial void OnpriceChanging(System.Nullable<decimal> value);
    partial void OnpriceChanged();
    partial void OncurrPriceChanging(System.Nullable<decimal> value);
    partial void OncurrPriceChanged();
    partial void OndiscountChanging(System.Nullable<decimal> value);
    partial void OndiscountChanged();
    partial void OnpressChanging(string value);
    partial void OnpressChanged();
    partial void OnpublishtimeChanging(string value);
    partial void OnpublishtimeChanged();
    partial void OneditionChanging(System.Nullable<int> value);
    partial void OneditionChanged();
    partial void OnpageNumChanging(System.Nullable<int> value);
    partial void OnpageNumChanged();
    partial void OnwordNumChanging(System.Nullable<int> value);
    partial void OnwordNumChanged();
    partial void OnprinttimeChanging(string value);
    partial void OnprinttimeChanged();
    partial void OnbooksizeChanging(System.Nullable<int> value);
    partial void OnbooksizeChanged();
    partial void OnpaperChanging(string value);
    partial void OnpaperChanged();
    partial void OncidChanging(string value);
    partial void OncidChanged();
    partial void Onimage_wChanging(string value);
    partial void Onimage_wChanged();
    partial void Onimage_bChanging(string value);
    partial void Onimage_bChanged();
    partial void OnorderByChanging(int value);
    partial void OnorderByChanged();
    partial void OnxingjiChanging(int value);
    partial void OnxingjiChanged();
    partial void OnstockChanging(int value);
    partial void OnstockChanged();
    partial void OndealChanging(int value);
    partial void OndealChanged();
    #endregion
		
		public Book()
		{
			this._CartItem_ = new EntitySet<CartItem_>(new Action<CartItem_>(this.attach_CartItem_), new Action<CartItem_>(this.detach_CartItem_));
			this._Collection = new EntitySet<Collection>(new Action<Collection>(this.attach_Collection), new Action<Collection>(this.detach_Collection));
			this._Category = default(EntityRef<Category>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bid", DbType="Char(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string bid
		{
			get
			{
				return this._bid;
			}
			set
			{
				if ((this._bid != value))
				{
					this.OnbidChanging(value);
					this.SendPropertyChanging();
					this._bid = value;
					this.SendPropertyChanged("bid");
					this.OnbidChanged();
				}
			}
		}

        public int statue
        {
            get { return this._statue; }
            set
            {
                if (this._statue != value)
                {
                    this._statue = value;
                }
            }
        }
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bname", DbType="VarChar(200)")]
		public string bname
		{
			get
			{
				return this._bname;
			}
			set
			{
				if ((this._bname != value))
				{
					this.OnbnameChanging(value);
					this.SendPropertyChanging();
					this._bname = value;
					this.SendPropertyChanged("bname");
					this.OnbnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_author", DbType="VarChar(50)")]
		public string author
		{
			get
			{
				return this._author;
			}
			set
			{
				if ((this._author != value))
				{
					this.OnauthorChanging(value);
					this.SendPropertyChanging();
					this._author = value;
					this.SendPropertyChanged("author");
					this.OnauthorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_currPrice", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> currPrice
		{
			get
			{
				return this._currPrice;
			}
			set
			{
				if ((this._currPrice != value))
				{
					this.OncurrPriceChanging(value);
					this.SendPropertyChanging();
					this._currPrice = value;
					this.SendPropertyChanged("currPrice");
					this.OncurrPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_discount", DbType="Decimal(3,1)")]
		public System.Nullable<decimal> discount
		{
			get
			{
				return this._discount;
			}
			set
			{
				if ((this._discount != value))
				{
					this.OndiscountChanging(value);
					this.SendPropertyChanging();
					this._discount = value;
					this.SendPropertyChanged("discount");
					this.OndiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_press", DbType="VarChar(100)")]
		public string press
		{
			get
			{
				return this._press;
			}
			set
			{
				if ((this._press != value))
				{
					this.OnpressChanging(value);
					this.SendPropertyChanging();
					this._press = value;
					this.SendPropertyChanged("press");
					this.OnpressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_publishtime", DbType="Char(10)")]
		public string publishtime
		{
			get
			{
				return this._publishtime;
			}
			set
			{
				if ((this._publishtime != value))
				{
					this.OnpublishtimeChanging(value);
					this.SendPropertyChanging();
					this._publishtime = value;
					this.SendPropertyChanged("publishtime");
					this.OnpublishtimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_edition", DbType="Int")]
		public System.Nullable<int> edition
		{
			get
			{
				return this._edition;
			}
			set
			{
				if ((this._edition != value))
				{
					this.OneditionChanging(value);
					this.SendPropertyChanging();
					this._edition = value;
					this.SendPropertyChanged("edition");
					this.OneditionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pageNum", DbType="Int")]
		public System.Nullable<int> pageNum
		{
			get
			{
				return this._pageNum;
			}
			set
			{
				if ((this._pageNum != value))
				{
					this.OnpageNumChanging(value);
					this.SendPropertyChanging();
					this._pageNum = value;
					this.SendPropertyChanged("pageNum");
					this.OnpageNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wordNum", DbType="Int")]
		public System.Nullable<int> wordNum
		{
			get
			{
				return this._wordNum;
			}
			set
			{
				if ((this._wordNum != value))
				{
					this.OnwordNumChanging(value);
					this.SendPropertyChanging();
					this._wordNum = value;
					this.SendPropertyChanged("wordNum");
					this.OnwordNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_printtime", DbType="Char(10)")]
		public string printtime
		{
			get
			{
				return this._printtime;
			}
			set
			{
				if ((this._printtime != value))
				{
					this.OnprinttimeChanging(value);
					this.SendPropertyChanging();
					this._printtime = value;
					this.SendPropertyChanged("printtime");
					this.OnprinttimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_booksize", DbType="Int")]
		public System.Nullable<int> booksize
		{
			get
			{
				return this._booksize;
			}
			set
			{
				if ((this._booksize != value))
				{
					this.OnbooksizeChanging(value);
					this.SendPropertyChanging();
					this._booksize = value;
					this.SendPropertyChanged("booksize");
					this.OnbooksizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_paper", DbType="VarChar(50)")]
		public string paper
		{
			get
			{
				return this._paper;
			}
			set
			{
				if ((this._paper != value))
				{
					this.OnpaperChanging(value);
					this.SendPropertyChanging();
					this._paper = value;
					this.SendPropertyChanged("paper");
					this.OnpaperChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cid", DbType="Char(32)")]
		public string cid
		{
			get
			{
				return this._cid;
			}
			set
			{
				if ((this._cid != value))
				{
					if (this._Category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncidChanging(value);
					this.SendPropertyChanging();
					this._cid = value;
					this.SendPropertyChanged("cid");
					this.OncidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_image_w", DbType="VarChar(100)")]
		public string image_w
		{
			get
			{
				return this._image_w;
			}
			set
			{
				if ((this._image_w != value))
				{
					this.Onimage_wChanging(value);
					this.SendPropertyChanging();
					this._image_w = value;
					this.SendPropertyChanged("image_w");
					this.Onimage_wChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_image_b", DbType="VarChar(100)")]
		public string image_b
		{
			get
			{
				return this._image_b;
			}
			set
			{
				if ((this._image_b != value))
				{
					this.Onimage_bChanging(value);
					this.SendPropertyChanging();
					this._image_b = value;
					this.SendPropertyChanged("image_b");
					this.Onimage_bChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_orderBy", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int orderBy
		{
			get
			{
				return this._orderBy;
			}
			set
			{
				if ((this._orderBy != value))
				{
					this.OnorderByChanging(value);
					this.SendPropertyChanging();
					this._orderBy = value;
					this.SendPropertyChanged("orderBy");
					this.OnorderByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xingji", DbType="Int")]
		public int xingji
		{
			get
			{
				return this._xingji;
			}
			set
			{
				if ((this._xingji != value))
				{
					this.OnxingjiChanging(value);
					this.SendPropertyChanging();
					this._xingji = value;
					this.SendPropertyChanged("xingji");
					this.OnxingjiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stock", DbType="Int")]
		public int stock
		{
			get
			{
				return this._stock;
			}
			set
			{
				if ((this._stock != value))
				{
					this.OnstockChanging(value);
					this.SendPropertyChanging();
					this._stock = value;
					this.SendPropertyChanged("stock");
					this.OnstockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deal", DbType="Int")]
		public int deal
		{
			get
			{
				return this._deal;
			}
			set
			{
				if ((this._deal != value))
				{
					this.OndealChanging(value);
					this.SendPropertyChanging();
					this._deal = value;
					this.SendPropertyChanged("deal");
					this.OndealChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Book_CartItem_", Storage="_CartItem_", ThisKey="bid", OtherKey="bid_")]
		public EntitySet<CartItem_> CartItem_
		{
			get
			{
				return this._CartItem_;
			}
			set
			{
				this._CartItem_.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Book_Collection", Storage="_Collection", ThisKey="bid", OtherKey="bid")]
		public EntitySet<Collection> Collection
		{
			get
			{
				return this._Collection;
			}
			set
			{
				this._Collection.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Book", Storage="_Category", ThisKey="cid", OtherKey="cid", IsForeignKey=true)]
		public Category Category
		{
			get
			{
				return this._Category.Entity;
			}
			set
			{
				Category previousValue = this._Category.Entity;
				if (((previousValue != value) 
							|| (this._Category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Category.Entity = null;
						previousValue.Book.Remove(this);
					}
					this._Category.Entity = value;
					if ((value != null))
					{
						value.Book.Add(this);
						this._cid = value.cid;
					}
					else
					{
						this._cid = default(string);
					}
					this.SendPropertyChanged("Category");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CartItem_(CartItem_ entity)
		{
			this.SendPropertyChanging();
			entity.Book = this;
		}
		
		private void detach_CartItem_(CartItem_ entity)
		{
			this.SendPropertyChanging();
			entity.Book = null;
		}
		
		private void attach_Collection(Collection entity)
		{
			this.SendPropertyChanging();
			entity.Book = this;
		}
		
		private void detach_Collection(Collection entity)
		{
			this.SendPropertyChanging();
			entity.Book = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[CartItem ]")]
	public partial class CartItem_ : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _cartItemId_;
		
		private System.Nullable<int> _quantity_;
		
		private string _bid_;
		
		private string _uid_;
		
		private int _orderBy;

        private decimal _subtotal;
		
		private EntityRef<Book> _Book;
		
		private EntityRef<User> _User;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncartItemId_Changing(string value);
    partial void OncartItemId_Changed();
    partial void Onquantity_Changing(System.Nullable<int> value);
    partial void Onquantity_Changed();
    partial void Onbid_Changing(string value);
    partial void Onbid_Changed();
    partial void Onuid_Changing(string value);
    partial void Onuid_Changed();
    partial void OnorderByChanging(int value);
    partial void OnorderByChanged();
    #endregion
		
		public CartItem_()
		{
			this._Book = default(EntityRef<Book>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[cartItemId ]", Storage="_cartItemId_", DbType="Char(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string cartItemId_
		{
			get
			{
				return this._cartItemId_;
			}
			set
			{
				if ((this._cartItemId_ != value))
				{
					this.OncartItemId_Changing(value);
					this.SendPropertyChanging();
					this._cartItemId_ = value;
					this.SendPropertyChanged("cartItemId_");
					this.OncartItemId_Changed();
				}
			}
		}

        public decimal subtotal
        {
            get
            {
                decimal d1 = (decimal)this.quantity_;
                decimal d2 = (decimal)this.Book.currPrice;
                this._subtotal = decimal.Round(decimal.Multiply(d1, d2), 2);
                return _subtotal;
            }
            set { this.subtotal = value; }
        }
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[quantity ]", Storage="_quantity_", DbType="Int")]
		public System.Nullable<int> quantity_
		{
			get
			{
				return this._quantity_;
			}
			set
			{
				if ((this._quantity_ != value))
				{
					this.Onquantity_Changing(value);
					this.SendPropertyChanging();
					this._quantity_ = value;
					this.SendPropertyChanged("quantity_");
					this.Onquantity_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[bid ]", Storage="_bid_", DbType="Char(32)")]
		public string bid_
		{
			get
			{
				return this._bid_;
			}
			set
			{
				if ((this._bid_ != value))
				{
					this.Onbid_Changing(value);
					this.SendPropertyChanging();
					this._bid_ = value;
					this.SendPropertyChanged("bid_");
					this.Onbid_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[uid ]", Storage="_uid_", DbType="Char(32)")]
		public string uid_
		{
			get
			{
				return this._uid_;
			}
			set
			{
				if ((this._uid_ != value))
				{
					this.Onuid_Changing(value);
					this.SendPropertyChanging();
					this._uid_ = value;
					this.SendPropertyChanged("uid_");
					this.Onuid_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_orderBy", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int orderBy
		{
			get
			{
				return this._orderBy;
			}
			set
			{
				if ((this._orderBy != value))
				{
					this.OnorderByChanging(value);
					this.SendPropertyChanging();
					this._orderBy = value;
					this.SendPropertyChanged("orderBy");
					this.OnorderByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Book_CartItem_", Storage="_Book", ThisKey="bid_", OtherKey="bid", IsForeignKey=true)]
		public Book Book
		{
			get
			{
				return this._Book.Entity;
			}
			set
			{
				Book previousValue = this._Book.Entity;
				if (((previousValue != value) 
							|| (this._Book.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Book.Entity = null;
						previousValue.CartItem_.Remove(this);
					}
					this._Book.Entity = value;
					if ((value != null))
					{
						value.CartItem_.Add(this);
						this._bid_ = value.bid;
					}
					else
					{
						this._bid_ = default(string);
					}
					this.SendPropertyChanged("Book");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_CartItem_", Storage="_User", ThisKey="uid_", OtherKey="uid", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.CartItem_.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.CartItem_.Add(this);
						this._uid_ = value.uid;
					}
					else
					{
						this._uid_ = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Category")]
	public partial class Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _cid;
		
		private string _cname;
		
		private string _pid;
		
		private string _desc;
		
		private int _orderBy;
		
		private EntitySet<Book> _Book;

        private EntitySet<Category> _childrens;

        private EntityRef<Category> _parent;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncidChanging(string value);
    partial void OncidChanged();
    partial void OncnameChanging(string value);
    partial void OncnameChanged();
    partial void OnpidChanging(string value);
    partial void OnpidChanged();
    partial void OndescChanging(string value);
    partial void OndescChanged();
    partial void OnorderByChanging(int value);
    partial void OnorderByChanged();
    #endregion

        public Category()
        {
            this._Book = new EntitySet<Book>(new Action<Book>(this.attach_Book), new Action<Book>(this.detach_Book));
            this._childrens = new EntitySet<Category>(new Action<Category>(this.attach_Childrens), new Action<Category>(this.detach_Childrens));
            this._parent = default(EntityRef<Category>);
            OnCreated();

        }
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cid", DbType="Char(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string cid
		{
			get
			{
				return this._cid;
			}
			set
			{
				if ((this._cid != value))
				{
					this.OncidChanging(value);
					this.SendPropertyChanging();
					this._cid = value;
					this.SendPropertyChanged("cid");
					this.OncidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cname", DbType="VarChar(50)")]
		public string cname
		{
			get
			{
				return this._cname;
			}
			set
			{
				if ((this._cname != value))
				{
					this.OncnameChanging(value);
					this.SendPropertyChanging();
					this._cname = value;
					this.SendPropertyChanged("cname");
					this.OncnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pid", DbType="Char(32)")]
		public string pid
		{
			get
			{
				return this._pid;
			}
			set
			{
				if ((this._pid != value))
				{
                    if (this._parent.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpidChanging(value);
					this.SendPropertyChanging();
					this._pid = value;
					this.SendPropertyChanged("pid");
					this.OnpidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[desc]", Storage="_desc", DbType="VarChar(100)")]
		public string desc
		{
			get
			{
				return this._desc;
			}
			set
			{
				if ((this._desc != value))
				{
					this.OndescChanging(value);
					this.SendPropertyChanging();
					this._desc = value;
					this.SendPropertyChanged("desc");
					this.OndescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_orderBy", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int orderBy
		{
			get
			{
				return this._orderBy;
			}
			set
			{
				if ((this._orderBy != value))
				{
					this.OnorderByChanging(value);
					this.SendPropertyChanging();
					this._orderBy = value;
					this.SendPropertyChanged("orderBy");
					this.OnorderByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Book", Storage="_Book", ThisKey="cid", OtherKey="cid")]
		public EntitySet<Book> Book
		{
			get
			{
				return this._Book;
			}
			set
			{
				this._Book.Assign(value);
			}
		}

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "Category_Category", Storage = "_childrens", ThisKey = "cid", OtherKey = "pid")]
        public EntitySet<Category> childrens
        {
            get
            {
                return this._childrens;
            }
            set
            {
                this._childrens.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "Category_Category", Storage = "_parent", ThisKey = "pid", OtherKey = "cid", IsForeignKey = true)]
        public Category parent
        {
            get
            {
                return this._parent.Entity;
            }
            set
            {
                Category previousValue = this._parent.Entity;
                if (((previousValue != value)
                            || (this._parent.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._parent.Entity = null;
                        previousValue.childrens.Remove(this);
                    }
                    this._parent.Entity = value;
                    if ((value != null))
                    {
                        value.childrens.Add(this);
                        this._pid = value.cid;
                    }
                    else
                    {
                        this._pid = default(string);
                    }
                    this.SendPropertyChanged("parent");
                }
            }
        }
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Book(Book entity)
		{
			this.SendPropertyChanging();
			entity.Category = this;
		}
		
		private void detach_Book(Book entity)
		{
			this.SendPropertyChanging();
			entity.Category = null;
		}

        private void attach_Childrens(Category entity)
        {
            this.SendPropertyChanging();
            entity.parent = this;

        }

        private void detach_Childrens(Category entity)
        {
            this.SendPropertyChanging();
            entity.parent = null;
        }
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Collection")]
	public partial class Collection : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _sid;
		
		private string _bid;
		
		private string _uid;
		
		private EntityRef<Book> _Book;
		
		private EntityRef<User> _User;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnsidChanging(string value);
    partial void OnsidChanged();
    partial void OnbidChanging(string value);
    partial void OnbidChanged();
    partial void OnuidChanging(string value);
    partial void OnuidChanged();
    #endregion
		
		public Collection()
		{
			this._Book = default(EntityRef<Book>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sid", DbType="Char(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string sid
		{
			get
			{
				return this._sid;
			}
			set
			{
				if ((this._sid != value))
				{
					this.OnsidChanging(value);
					this.SendPropertyChanging();
					this._sid = value;
					this.SendPropertyChanged("sid");
					this.OnsidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bid", DbType="Char(32) NOT NULL", CanBeNull=false)]
		public string bid
		{
			get
			{
				return this._bid;
			}
			set
			{
				if ((this._bid != value))
				{
					if (this._Book.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnbidChanging(value);
					this.SendPropertyChanging();
					this._bid = value;
					this.SendPropertyChanged("bid");
					this.OnbidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uid", DbType="Char(32) NOT NULL", CanBeNull=false)]
		public string uid
		{
			get
			{
				return this._uid;
			}
			set
			{
				if ((this._uid != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuidChanging(value);
					this.SendPropertyChanging();
					this._uid = value;
					this.SendPropertyChanged("uid");
					this.OnuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Book_Collection", Storage="_Book", ThisKey="bid", OtherKey="bid", IsForeignKey=true)]
		public Book Book
		{
			get
			{
				return this._Book.Entity;
			}
			set
			{
				Book previousValue = this._Book.Entity;
				if (((previousValue != value) 
							|| (this._Book.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Book.Entity = null;
						previousValue.Collection.Remove(this);
					}
					this._Book.Entity = value;
					if ((value != null))
					{
						value.Collection.Add(this);
						this._bid = value.bid;
					}
					else
					{
						this._bid = default(string);
					}
					this.SendPropertyChanged("Book");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Collection", Storage="_User", ThisKey="uid", OtherKey="uid", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Collection.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Collection.Add(this);
						this._uid = value.uid;
					}
					else
					{
						this._uid = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Order]")]
	public partial class Order : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _oid;
		
		private string _ordertime;
		
		private System.Nullable<decimal> _total;
		
		private System.Nullable<int> _status;
		
		private string _address;
		
		private string _uid;
		
		private EntitySet<Orderitem> _Orderitem;
		
		private EntityRef<User> _User;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnoidChanging(string value);
    partial void OnoidChanged();
    partial void OnordertimeChanging(string value);
    partial void OnordertimeChanged();
    partial void OntotalChanging(System.Nullable<decimal> value);
    partial void OntotalChanged();
    partial void OnstatusChanging(System.Nullable<int> value);
    partial void OnstatusChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OnuidChanging(string value);
    partial void OnuidChanged();
    #endregion
		
		public Order()
		{
			this._Orderitem = new EntitySet<Orderitem>(new Action<Orderitem>(this.attach_Orderitem), new Action<Orderitem>(this.detach_Orderitem));
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_oid", DbType="Char(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string oid
		{
			get
			{
				return this._oid;
			}
			set
			{
				if ((this._oid != value))
				{
					this.OnoidChanging(value);
					this.SendPropertyChanging();
					this._oid = value;
					this.SendPropertyChanged("oid");
					this.OnoidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ordertime", DbType="Char(19)")]
		public string ordertime
		{
			get
			{
				return this._ordertime;
			}
			set
			{
				if ((this._ordertime != value))
				{
					this.OnordertimeChanging(value);
					this.SendPropertyChanging();
					this._ordertime = value;
					this.SendPropertyChanged("ordertime");
					this.OnordertimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> total
		{
			get
			{
				return this._total;
			}
			set
			{
				if ((this._total != value))
				{
					this.OntotalChanging(value);
					this.SendPropertyChanging();
					this._total = value;
					this.SendPropertyChanged("total");
					this.OntotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Int")]
		public System.Nullable<int> status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="VarChar(1000)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uid", DbType="Char(32)")]
		public string uid
		{
			get
			{
				return this._uid;
			}
			set
			{
				if ((this._uid != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuidChanging(value);
					this.SendPropertyChanging();
					this._uid = value;
					this.SendPropertyChanged("uid");
					this.OnuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_Orderitem", Storage="_Orderitem", ThisKey="oid", OtherKey="oid")]
		public EntitySet<Orderitem> Orderitem
		{
			get
			{
				return this._Orderitem;
			}
			set
			{
				this._Orderitem.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Order", Storage="_User", ThisKey="uid", OtherKey="uid", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Order.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Order.Add(this);
						this._uid = value.uid;
					}
					else
					{
						this._uid = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Orderitem(Orderitem entity)
		{
			this.SendPropertyChanging();
			entity.Order = this;
		}
		
		private void detach_Orderitem(Orderitem entity)
		{
			this.SendPropertyChanging();
			entity.Order = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Orderitem")]
	public partial class Orderitem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _orderItemId;
		
		private System.Nullable<int> _quantity;
		
		private System.Nullable<decimal> _subtotal;
		
		private string _bid;
		
		private string _bname;
		
		private System.Nullable<decimal> _currPrice;
		
		private string _image_b;
		
		private string _oid;
		
		private EntityRef<Order> _Order;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnorderItemIdChanging(string value);
    partial void OnorderItemIdChanged();
    partial void OnquantityChanging(System.Nullable<int> value);
    partial void OnquantityChanged();
    partial void OnsubtotalChanging(System.Nullable<decimal> value);
    partial void OnsubtotalChanged();
    partial void OnbidChanging(string value);
    partial void OnbidChanged();
    partial void OnbnameChanging(string value);
    partial void OnbnameChanged();
    partial void OncurrPriceChanging(System.Nullable<decimal> value);
    partial void OncurrPriceChanged();
    partial void Onimage_bChanging(string value);
    partial void Onimage_bChanged();
    partial void OnoidChanging(string value);
    partial void OnoidChanged();
    #endregion
		
		public Orderitem()
		{
			this._Order = default(EntityRef<Order>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_orderItemId", DbType="Char(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string orderItemId
		{
			get
			{
				return this._orderItemId;
			}
			set
			{
				if ((this._orderItemId != value))
				{
					this.OnorderItemIdChanging(value);
					this.SendPropertyChanging();
					this._orderItemId = value;
					this.SendPropertyChanged("orderItemId");
					this.OnorderItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Int")]
		public System.Nullable<int> quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subtotal", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> subtotal
		{
			get
			{
				return this._subtotal;
			}
			set
			{
				if ((this._subtotal != value))
				{
					this.OnsubtotalChanging(value);
					this.SendPropertyChanging();
					this._subtotal = value;
					this.SendPropertyChanged("subtotal");
					this.OnsubtotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bid", DbType="Char(32)")]
		public string bid
		{
			get
			{
				return this._bid;
			}
			set
			{
				if ((this._bid != value))
				{
					this.OnbidChanging(value);
					this.SendPropertyChanging();
					this._bid = value;
					this.SendPropertyChanged("bid");
					this.OnbidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bname", DbType="VarChar(200)")]
		public string bname
		{
			get
			{
				return this._bname;
			}
			set
			{
				if ((this._bname != value))
				{
					this.OnbnameChanging(value);
					this.SendPropertyChanging();
					this._bname = value;
					this.SendPropertyChanged("bname");
					this.OnbnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_currPrice", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> currPrice
		{
			get
			{
				return this._currPrice;
			}
			set
			{
				if ((this._currPrice != value))
				{
					this.OncurrPriceChanging(value);
					this.SendPropertyChanging();
					this._currPrice = value;
					this.SendPropertyChanged("currPrice");
					this.OncurrPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_image_b", DbType="VarChar(100)")]
		public string image_b
		{
			get
			{
				return this._image_b;
			}
			set
			{
				if ((this._image_b != value))
				{
					this.Onimage_bChanging(value);
					this.SendPropertyChanging();
					this._image_b = value;
					this.SendPropertyChanged("image_b");
					this.Onimage_bChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_oid", DbType="Char(32)")]
		public string oid
		{
			get
			{
				return this._oid;
			}
			set
			{
				if ((this._oid != value))
				{
					if (this._Order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnoidChanging(value);
					this.SendPropertyChanging();
					this._oid = value;
					this.SendPropertyChanged("oid");
					this.OnoidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_Orderitem", Storage="_Order", ThisKey="oid", OtherKey="oid", IsForeignKey=true)]
		public Order Order
		{
			get
			{
				return this._Order.Entity;
			}
			set
			{
				Order previousValue = this._Order.Entity;
				if (((previousValue != value) 
							|| (this._Order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order.Entity = null;
						previousValue.Orderitem.Remove(this);
					}
					this._Order.Entity = value;
					if ((value != null))
					{
						value.Orderitem.Add(this);
						this._oid = value.oid;
					}
					else
					{
						this._oid = default(string);
					}
					this.SendPropertyChanged("Order");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
